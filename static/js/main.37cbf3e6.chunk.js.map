{"version":3,"sources":["Modal/ModalComponent.tsx","App.tsx","index.js"],"names":["Modal","title","isOpen","onClose","children","outsideRef","React","useRef","handleCloseOnOverlay","e","target","current","ModalMain","styled","div","ModalOverlay","ModalBox","ModalTitle","ModalContent","ModalClose","button","ref","className","onClick","initialState","App","useState","JSON","parse","stringify","columns","setColumns","P1","P2","players","setPlayers","isModalOpen","setModalState","currentPlayer","setCurrentPlayer","winner","setWinner","getPlayersNames","window","prompt","length","trim","alert","useEffect","checkWinner","p1Column","p2Column","p1Row","p2Row","p1Diagonal","p2Diagonal","p1BackDiagonal","p2BackDiagonal","columnsLength","c","i","checkColumnsAndRows","Wrapper","Column","Disk","ColorFieldP1","ColorFieldP2","FieldText","map","column","idx","element","columnId","fieldId","newArr","clickHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37cbf3e6.chunk.js","sourcesContent":["import React, { MouseEvent } from \"react\";\nimport styled from \"styled-components\";\n\ninterface ModalProps {\n  title: string;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n  title,\n  isOpen,\n  onClose,\n  children,\n}) => {\n  const outsideRef = React.useRef(null);\n\n  const handleCloseOnOverlay = (\n    e: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    if (e.target === outsideRef.current) {\n      onClose();\n    }\n  };\n\n  const ModalMain = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n  `;\n\n  const ModalOverlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.8);\n    cursor: pointer;\n  `;\n\n  const ModalBox = styled.div`\n    position: relative;\n    width: 60%;\n    margin: 0 10%;\n    padding: 50px;\n    box-sizing: border-box;\n    border-radius: 10px;\n    background-color: white;\n    cursor: auto;\n  `;\n\n  const ModalTitle = styled.div`\n    color: #9e25fc;\n    font-size: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n\n  const ModalContent = styled.div`\n    margin-top: 30px;\n    color: #6b6b6b;\n    font-size: 16px;\n  `;\n\n  const ModalClose = styled.button`\n    background-color: #9e25fc;\n    font-size: 30px;\n    border-radius: 6px;\n    color: white;\n    margin-bottom: 5%;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  `;\n\n  return isOpen ? (\n    <ModalMain>\n      <ModalOverlay\n        ref={outsideRef}\n        className={\"modal__overlay\"}\n        onClick={() => handleCloseOnOverlay}\n      />\n      <ModalBox>\n        <ModalClose onClick={onClose}>Start A New Game</ModalClose>\n        <ModalTitle>{title}</ModalTitle>\n\n        <ModalContent className={\"modal__content\"}>{children}</ModalContent>\n      </ModalBox>\n    </ModalMain>\n  ) : null;\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal } from \"./Modal/ModalComponent\";\n\nconst initialState: Array<Array<string>> = [\n  [\"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\"],\n];\n\nconst App = () => {\n  const [columns, setColumns] = useState<Array<Array<string>>>(\n    JSON.parse(JSON.stringify(initialState))\n  );\n\n  const [players, setPlayers] = useState<{ [key: string]: string | null }>({\n    P1: \"Player 1\",\n    P2: \"Player 2\",\n  });\n\n  const [isModalOpen, setModalState] = React.useState(false);\n  const toggleModal = () => setModalState(!isModalOpen);\n\n  const [currentPlayer, setCurrentPlayer] = useState<string>(\"P1\");\n  const [winner, setWinner] = useState<null | string>(null);\n\n  const getPlayersNames = () => {\n    let P1: string | null;\n    let P2: string | null;\n\n    P1 = window.prompt(`Enter your name`);\n    P2 = window.prompt(`Enter your name`);\n\n    if (\n      P1 === P2 ||\n      (P1 != null && P1.length === 0) ||\n      (P2 != null && P2.length === 0) ||\n      (P1 && P1.trim().length === 0) ||\n      (P2 && P2.trim().length === 0)\n    ) {\n      alert(\"Error: give different names to players\");\n\n      getPlayersNames();\n    }\n\n    return {\n      P1,\n      P2,\n    };\n  };\n\n  useEffect(() => {\n    const { P1, P2 } = getPlayersNames();\n\n    setPlayers({ P1, P2 });\n  }, []);\n\n  useEffect(() => {\n    if (winner !== null) {\n      setModalState(!isModalOpen);\n      setColumns(JSON.parse(JSON.stringify(initialState)));\n    }\n  }, [winner]);\n\n  useEffect(() => {\n    if (columns == initialState) {\n      setWinner(null);\n    }\n  }, [columns]);\n\n  const clickHandler = (columnId: number, fieldId: number) => {\n    let newArr = columns;\n\n    if (newArr[columnId][fieldId] !== \"\") return;\n    newArr[columnId][fieldId] = currentPlayer;\n\n    setColumns(newArr);\n\n    if (currentPlayer === \"P1\") {\n      setCurrentPlayer(\"P2\");\n    } else {\n      setCurrentPlayer(\"P1\");\n    }\n\n    checkWinner();\n  };\n\n  const checkWinner = () => {\n    let p1Column: number = 0;\n    let p2Column: number = 0;\n    let p1Row: number = 0;\n    let p2Row: number = 0;\n    let p1Diagonal: number = 0;\n    let p2Diagonal: number = 0;\n    let p1BackDiagonal: number = 0;\n    let p2BackDiagonal: number = 0;\n    let columnsLength: number = columns.length - 1;\n    let rowLength: number = 5;\n\n    for (let c = 0; c < columnsLength; c++) {\n      for (let i = 0; i < rowLength; i++) {\n        if (\n          columns[c][i] &&\n          columns[c][i + 1] &&\n          columns[c][i + 2] &&\n          columns[c][i + 3]\n        ) {\n          if (\n            columns[c][i] === columns[c][i + 1] &&\n            columns[c][i + 1] === columns[c][i + 2] &&\n            columns[c][i + 2] === columns[c][i + 3]\n          ) {\n            if (columns[c][i] === \"P1\") {\n              p1Column = 1;\n            } else {\n              p2Column = 1;\n            }\n          }\n        }\n      }\n    }\n\n    for (let c = 0; c < columnsLength; c++) {\n      for (let i = 0; i < rowLength; i++) {\n        if (\n          columns[c][i] &&\n          columns[c + 1] &&\n          columns[c + 1][i] &&\n          columns[c + 2] &&\n          columns[c + 3] &&\n          columns[c + 2][i] &&\n          columns[c + 3][i]\n        ) {\n          if (\n            columns[c][i] === columns[c + 1][i] &&\n            columns[c + 1][i] === columns[c + 2][i] &&\n            columns[c + 2][i] === columns[c + 3][i]\n          ) {\n            if (columns[c][i] === \"P1\") {\n              p1Row = 1;\n            } else {\n              p2Row = 1;\n            }\n          }\n        }\n      }\n    }\n\n    for (let c = 0; c < columnsLength; c++) {\n      for (let i = 0; i < rowLength; i++) {\n        if (\n          columns[c][i] &&\n          columns[c + 1] &&\n          columns[c + 2] &&\n          columns[c + 3] &&\n          columns[c + 1][i + 1] &&\n          columns[c + 2][i + 2] &&\n          columns[c + 3][i + 3]\n        ) {\n          if (\n            columns[c][i] === columns[c + 1][i + 1] &&\n            columns[c + 1][i + 1] === columns[c + 2][i + 2] &&\n            columns[c + 2][i + 2] === columns[c + 3][i + 3]\n          ) {\n            if (columns[c][i] === \"P1\") {\n              p1Diagonal = 1;\n            } else {\n              p2Diagonal = 1;\n            }\n          }\n        }\n      }\n    }\n\n    for (let c = columnsLength; c > 0; c--) {\n      for (let i = 0; i < rowLength; i++) {\n        if (\n          columns[c] &&\n          columns[c][i] &&\n          columns[c - 1] &&\n          columns[c - 2] &&\n          columns[c - 3] &&\n          columns[c - 1][i + 1] &&\n          columns[c - 2][i + 2] &&\n          columns[c - 3][i + 3]\n        ) {\n          if (\n            columns[c][i] === columns[c - 1][i + 1] &&\n            columns[c - 1][i + 1] === columns[c - 2][i + 2] &&\n            columns[c - 2][i + 2] === columns[c - 3][i + 3]\n          ) {\n            if (columns[c][i] === \"P1\") {\n              p1BackDiagonal = 1;\n            } else {\n              p2BackDiagonal = 1;\n            }\n          }\n        }\n      }\n    }\n\n    checkColumnsAndRows(\n      p1Column,\n      p2Column,\n      p1Row,\n      p2Row,\n      p1Diagonal,\n      p2Diagonal,\n      p1BackDiagonal,\n      p2BackDiagonal\n    );\n  };\n\n  const checkColumnsAndRows = (\n    p1Column: number,\n    p2Column: number,\n    p1Row: number,\n    p2Row: number,\n    p1Diagonal: number,\n    p2Diagonal: number,\n    p1BackDiagonal: number,\n    p2BackDiagonal: number\n  ) => {\n    if (p1Column >= 1) {\n      return setWinner(players[\"P1\"]);\n    }\n    if (p2Column >= 1) {\n      return setWinner(players[\"P2\"]);\n    }\n    if (p1Row >= 1) {\n      return setWinner(players[\"P1\"]);\n    }\n    if (p2Row >= 1) {\n      return setWinner(players[\"P2\"]);\n    }\n    if (p1Diagonal >= 1) {\n      return setWinner(players[\"P1\"]);\n    }\n    if (p2Diagonal >= 1) {\n      return setWinner(players[\"P2\"]);\n    }\n    if (p1BackDiagonal >= 1) {\n      return setWinner(players[\"P1\"]);\n    }\n    if (p2BackDiagonal >= 1) {\n      return setWinner(players[\"P2\"]);\n    }\n  };\n\n  const Wrapper = styled.div`\n    width: 800px;\n    height: 800px;\n    display: flex;\n    justifycontent: space-around;\n    margin: 0 auto;\n    background-image: url(\"paper.gif\");\n  `;\n\n  const Column = styled.div`\n    padding-top: 50px;\n    width: 150px;\n    height: 700px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  `;\n\n  const Disk = styled.div`\n    border-radius: 6px;\n    border-radius: 50%;\n    width: 100px;\n    height: 100px;\n    margin-bottom: 10px;\n    position: relative;\n    -webkit-box-shadow: -1px 2px 82px -5px rgba(107, 94, 107, 0.59);\n    -moz-box-shadow: -1px 2px 82px -5px rgba(107, 94, 107, 0.59);\n    box-shadow: -1px 2px 82px -5px rgba(107, 94, 107, 0.59);\n  `;\n\n  const ColorFieldP1 = styled.div`\n    position: absolute;\n    border-radius: 50%;\n    content: \"\";\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: yellow;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n\n  const ColorFieldP2 = styled.div`\n    position: absolute;\n    border-radius: 50%;\n    content: \"\";\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: red;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n\n  const FieldText = styled.div`\n    color: dark grey;\n    border-radius: 50%;\n    font-weight: bold;\n    font-family: Arial, Helvetica, sans-serif;\n    word-wrap: break-word;\n    margin: 10px;\n  `;\n\n  return (\n    <>\n      <Wrapper>\n        {columns.map((column: Array<string>, idx: number) => {\n          return (\n            <Column key={idx}>\n              {column.map((element: string, i: number) => {\n                return (\n                  <>\n                    <Disk key={i + \"i\"} onClick={() => clickHandler(idx, i)}>\n                      {element === \"P1\" ? (\n                        <ColorFieldP1>\n                          {\" \"}\n                          <FieldText>{players.P1}</FieldText>\n                        </ColorFieldP1>\n                      ) : element === \"P2\" ? (\n                        <ColorFieldP2>\n                          <FieldText>{players.P2}</FieldText>\n                        </ColorFieldP2>\n                      ) : (\n                        \"\"\n                      )}\n                    </Disk>\n                  </>\n                );\n              })}\n            </Column>\n          );\n        })}\n        <Modal\n          title={`${winner} is a Winner!`}\n          isOpen={isModalOpen}\n          onClose={toggleModal}\n        ></Modal>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}